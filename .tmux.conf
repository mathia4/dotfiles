# Ensure 24-bit color in tmux
set -g default-terminal "xterm-256color-italic"

# Enable terminal compability
set-option -ga terminal-overrides ",xterm-256color-italic:Tc"

# Fix for copy-paste bug in OS X Sierra; https://github.com/tmux/tmux/issues/543
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Split panes using \ and - (creates new pane w/ current path)
unbind '"'
unbind %
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Enable mouse mode
set -g mouse on

# Removes ESC response delay in nvim
set -sg escape-time 0

# Source config file
bind r source-file ~/.tmux.conf \; display-message " ~/.tmux.conf reloaded"

# Renumber windows after closing
set -g renumber-windows on

# Adds pane separator above status bar
setw -g pane-border-status bottom

# Colors
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright
set-option -g pane-border-fg '#282828'
set-option -g pane-border-bg 'default'
set-option -g pane-active-border-fg '#282828'
set-option -g pane-active-border-bg 'default'

# Status
set -g status-left ""
set -g status-right ""
setw -g window-status-format "#[bg=black,fg=#665c54] #W "
setw -g window-status-current-format "#[bg=black,fg=green] #W "

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
